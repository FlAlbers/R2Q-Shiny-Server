devtools::install_github("hebrewseniorlife/rmdWidgets")
library(dplyr)
library(readxl)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(jpeg)
library(dplyr)
library(readxl)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(jpeg)
tinytex::install_tinytex()
options("repos")
install.packages("startup")
.renviron
.Renviron
Sys.getenv("R_ENVIRON_USER")
?.Renviron
Sys.getenv("R_PROFILE_USER")
try(startup::startup())
normalizePath("~")
startup::startup(debug = TRUE)
$ R_STARTUP_DEBUG=TRUE R
?Rprofile
file.edit(file.path("~", ".Rprofile"))
.First <- function(){
library(dplyr)
library(readxl)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(jpeg)
library(knitr)
library(tinytex)
cat("\nWelcome at", date(), "\n")
}
file.edit(file.path("~", ".Rprofile"))
source('~/.Rprofile')
library(yaml)
install.packages(c("diagram", "gridExtra", "influxdbr", "kableExtra", "units", "xts"))
?collapse
summary(cars)
summary(cars)
summary(cars)
tinytex::tlmgr_search("parskip.sty")
tinytex::tlmgr_install("pdfcrop")
knit_with_parameters('C:/Dateien Dominik/main_document_hannes_masterarbeit/RMD_CitationTest.Rmd', encoding = 'UTF-8')
install.packages("shiny")
install.packages("shiny")
library(shiny)
knit_with_parameters('C:/Dateien Dominik/main_document_hannes_masterarbeit/RMD_CitationTest.Rmd', encoding = 'UTF-8')
knit_with_parameters('C:/Dateien Dominik/main_document_hannes_masterarbeit/RMD_CitationTest.Rmd', encoding = 'UTF-8')
library(readxl)
R2Q_test <- read_excel("C:/R_data/R2Q/R2Q_test.xlsx")
View(R2Q_test)
knit_with_parameters('C:/R_data/R2Q/R2Q_test.Rmd', encoding = 'UTF-8')
knit_with_parameters('C:/R_data/R2Q/R2Q_test.Rmd', encoding = 'UTF-8')
knit_with_parameters('C:/R_data/R2Q/R2Q_test.Rmd', encoding = 'UTF-8')
knit_with_parameters('C:/R_data/R2Q/R2Q_test.Rmd', encoding = 'UTF-8')
as.character(t1[1,4])
as.character(R2Q_test[1,4])
as.character(R2Q_test[1,2])
as.character(R2Q_test[1,5])
as.character(t1[1,5])
knit_with_parameters('C:/R_data/R2Q/R2Q_test.Rmd', encoding = 'UTF-8')
for(i in 1:10) {
nam <- paste("c", i, sep = "")
assign(nam)
}
for(i in 1:10) {
nam <- paste("c", i, sep = "")
assign(nam, rnorm(3)+d)
}
assign(nam, rnorm(3))
for(i in 1:10) {
nam <- paste("c", i, sep = "")}
for(i in 1:10) {
nam <- paste("c", i, sep = "")}
for(i in 1:10) {
nam <- paste("c", i, sep = "")}
for(i in 1:10) {
nam <- paste("c", i, sep = "")}
for(i in 1:3){
assign(paste("a", i, sep = ""), i)
}
knitr::opts_chunk$set(echo = TRUE)
1+1
install.packages("gridExtra")
install.packages("jpeg")
.libPaths()
install.packages("jpeg")
library(jpeg)
version
library(shiny); runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent/appSandbox.R')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent/appSandbox.R')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent/appSandbox.R')
library(shiny); runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent/appSandbox.R')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
shiny::runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent/appSandbox.R')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent/appSandbox.R')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent/appSandbox.R')
library(shiny); runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent/appSandbox.R')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
shiny::runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
str <- c("äöü", "ÄÖÜ")
stringi::stri_replace_all_fixed(
str,
c("ä", "ö", "ü", "Ä", "Ö", "Ü"),
c("ae", "oe", "ue", "Ae", "Oe", "Ue"),
vectorize_all = FALSE
)
str <- c("dsfsdäöü", "dsfsdfÄÖÜ")
stringi::stri_replace_all_fixed(
str,
c("ä", "ö", "ü", "Ä", "Ö", "Ü"),
c("ae", "oe", "ue", "Ae", "Oe", "Ue"),
vectorize_all = FALSE
)
shiny::runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
getwd
getwd()
tempdir
tempdir()
getwd()
getwd()
install.packages("xelate")
install.packages("webshot")
webshot::install_phantomjs()
install.packages("processx")
shiny::runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
getwd
getwd()
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
install.packages("magick")
install.packages("rtools")
Sys.getenv("PATH")
getwd ()
getwd ()
setwd("C:/Program Files/R/R-4.0.2")
setwd("C:/Users/fl-al/Documents")
setwd("C:/Users/fl-al/Desktop")
setwd("C:/Users/fl-al/Documents")
path == Sys.getenv("R_HOME")
shiny::runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
str_c(file.path("./Umsetzungsbeispiele", namePNG),"bsp.PNG"))$ctime)
file.info(str_c(file.path("./Umsetzungsbeispiele", namePNG),"bsp.PNG"))$ctime)
file.info(str_c(file.path("./Umsetzungsbeispiele", namePNG),"bsp.PNG"))$ctime
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp()
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp()
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp()
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp()
runApp()
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp()
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp()
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp()
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
shiny::runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp()
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp()
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
mid = 1
loadedTable <- dbGetQuery(con, paste("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
con <- dbConnect(MySQL(), user = "Flemming", password = "vo5Otei9", dbname = "r2q", host = "r2q.fh-muenster.de")
loadedTable <- dbGetQuery(con, paste("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
save1 <- loadedTable
add_column(save1, id = "id", .after = 1)
View(save1)
save1 <- add_column(save1, id = "id", .after = 1)
View(save1)
View(save1)
save1 <- loadedTable
View(save1)
loadedTable <- dbGetQuery(con, paste("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
save1 <- loadedTable
save1 <- add_column(save1, id = "id", .after = 1)
loadedTable <- dbGetQuery(con, paste("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
save1 <- loadedTable
save1 <- add_column(save1, id = "id", .after = 1)
View(save1)
massnahme <- subset(list_Massnahmen, id = save1[1,2])[1,2]
list_Massnahmen <- dbGetQuery(con, "SELECT ressource, kategorieIndex, name, id FROM massnahmen");
# list_Massnahmen <- read_excel("Massnahmenliste.xlsx")
list_Massnahmen[["kategorieIndex"]] <- str_pad(list_Massnahmen[["kategorieIndex"]], 3, pad = "0")
list_Massnahmen <- unite(list_Massnahmen, Massnahmen, ressource:name)
massnahme <- subset(list_Massnahmen, id = save1[1,2])[1,2]
massnahme <- subset(list_Massnahmen, id = save1[1,2])
View(massnahme)
massnahme <- subset(list_Massnahmen, id == save1[1,2])
View(massnahme)
View(list_Massnahmen)
View(massnahme)
save1[1,2]
save1[1,3]
massnahme <- subset(list_Massnahmen, id == save1[1,3])
View(massnahme)
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
loadedTable <- dbGetQuery(con, paste("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
loadedTable <- dbGetQuery(con, paste("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
View(loadedTable)
loadedTable <- dbGetQuery(con, paste("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
View(loadedTable)
mid = 2
loadedTable <- dbGetQuery(con, paste("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
View(loadedTable)
massnahme <- subset(list_Massnahmen, id == save1[1,3])[1,1]
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
mid <- subset(list_Massnahmen, Massnahmen == input$Massnahme)[1,2]
dbExecute(con, paste("INSERT INTO massnahmen (idrow, massnahme_id, ebene1, ebene2, ebene3, wert, werttyp) VALUES (", as.character(i), ", ", as.character(mid), ", '", save1[i,3], "', '", save1[i,4], "', '", save1[i,5], "', '", save1[i,6], "', '", save1[i,7],"', '", save1[i,8],"');"));
dbExecute(con, paste("INSERT INTO massnahmendaten (idrow, massnahme_id, ebene1, ebene2, ebene3, wert, werttyp) VALUES (", as.character(i), ", ", as.character(mid), ", '", save1[i,3], "', '", save1[i,4], "', '", save1[i,5], "', '", save1[i,6], "', '", save1[i,7],"', '", save1[i,8],"');"));
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp()
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp()
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
save1 <- add_column(save1, id = "id", .after = 1)
massnahme <- subset(list_Massnahmen, id == save1[1,3])[1,1]
datamassnahme <- save1
save1 <- loadedTable
save1 <- add_column(save1, id = "id", .after = 1)
massnahme <- subset(list_Massnahmen, id == save1[1,3])[1,1]
datamassnahme <- save1
mid = 1
loadedTable <- dbGetQuery(con, paste("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
con <- dbConnect(MySQL(), user = "Flemming", password = "vo5Otei9", dbname = "r2q", host = "r2q.fh-muenster.de")
list_Massnahmen <- dbGetQuery(con, "SELECT ressource, kategorieIndex, name, id FROM massnahmen");
loadedTable <- dbGetQuery(con, paste("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
save1 <- loadedTable
save1 <- add_column(save1, id = "id", .after = 1)
massnahme <- subset(list_Massnahmen, id == save1[1,3])[1,1]
View(list_Massnahmen)
datamassnahme <- save1
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
loadedTable <- dbGetQuery(con, paste("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
save1 <- loadedTable
save1 <- add_column(save1, id = "id", .after = 1)
loadedTable <- dbGetQuery(con, paste("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
save1 <- loadedTable
View(save1)
View(save1)
loadedTable <- dbGetQuery(con, paste("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
save1 <- loadedTable
save1 <- add_column(save1, id = "id", .after = 1)
massnahme <- subset(list_Massnahmen, id == save1[1,3])[1,1]
datamassnahme <- save1
View(datamassnahme)
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp()
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
NA == "1"
NA == NA
"1" == "1"
is.na(NA)
!TRUE
TRUE!
TRUE & TRUE
TRUE && TRUE
TRUE && FALSE
TRUE & FALSE
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
shiny::runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
runApp('C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent')
mid = 1
library(shiny)
library(RSQLite)
library(shinyMatrix)
library(rhandsontable)
library(readxl)
library(dplyr)
library(rmarkdown)
library(shinycssloaders)
library(shinybusy)
library(writexl)
library(RMySQL)
library(DBI)
con <- dbConnect(MySQL(), user = "Flemming", password = "vo5Otei9", dbname = "r2q", host = "r2q.fh-muenster.de")
list_Massnahmen <- dbGetQuery(con, "SELECT ressource, kategorieIndex, name, id FROM massnahmen");
# list_Massnahmen <- read_excel("Massnahmenliste.xlsx")
list_Massnahmen[["kategorieIndex"]] <- str_pad(list_Massnahmen[["kategorieIndex"]], 3, pad = "0")
list_Massnahmen <- unite(list_Massnahmen, Massnahmen, ressource:name)
loadedTable <- dbGetQuery(con, paste("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
save1 <- loadedTable
save1 <- add_column(save1, id = "id", .after = 1)
massnahme <- subset(list_Massnahmen, id == save1[1,3])[1,1]
View(save1)
View(save1)
nr <- as.numeric(subset(datamassnahme, datamassnahme$Ebene1 == "Kurzbeschreibung" )[1,1])
datamassnahme <- save1
nr <- as.numeric(subset(datamassnahme, datamassnahme$Ebene1 == "Kurzbeschreibung" )[1,1])
nr <- as.numeric(subset(datamassnahme, Ebene1 == "Kurzbeschreibung" )[1,1])
View(loadedTable)
nr <- as.numeric(subset(datamassnahme, ebene1 == "Kurzbeschreibung" )[1,1])
nr <- as.numeric(subset(datamassnahme, ebene1 == "Kurzbeschreibung" )[1,1])
subset(datamassnahme, ebene1 = "Kurzbeschreibung")
subset(datamassnahme, ebene1 == "Kurzbeschreibung")
View(datamassnahme)
subset(datamassnahme, ebene1 == "Kurzbeschreibung")
subset(datamassnahme, ebene1 == " Kurzbeschreibung ")
dbExecute(con, paste("INSERT INTO massnahmendaten (idrow, massnahme_id, ebene1, ebene2, ebene3, wert, werttyp) VALUES (", as.character(i), ", ", as.character(mid), ", '", save1[i,4], "', '", save1[i,5], "', '", save1[i,6], "', '", save1[i,7], "', '", save1[i,8],"') ON DUPLICATE KEY UPDATE wert = '", save1[i,7], "';"));
save1 <- datamassnahme
for(i in 1:nrow(save1)){
dbExecute(con, paste("INSERT INTO massnahmendaten (idrow, massnahme_id, ebene1, ebene2, ebene3, wert, werttyp) VALUES (", as.character(i), ", ", as.character(mid), ", '", save1[i,4], "', '", save1[i,5], "', '", save1[i,6], "', '", save1[i,7], "', '", save1[i,8],"') ON DUPLICATE KEY UPDATE wert = '", save1[i,7], "';"));
}
View(save1)
getwd()
save1 <- read_excel("R2Q_Datensatz_leer.xlsx")
setwd(C:\Users\fl-al\Google Drive\R\R2Q_App\R2Q_App_VCurrent)
setwd("C:/Users/fl-al/Google Drive/R/R2Q_App/R2Q_App_VCurrent")
save1 <- read_excel("R2Q_Datensatz_leer.xlsx")
View(save1)
View(save1)
datamassnahme <- save1
View(datamassnahme)
save1 <- datamassnahme
for(i in 1:nrow(save1)){
dbExecute(con, paste("INSERT INTO massnahmendaten (idrow, massnahme_id, ebene1, ebene2, ebene3, wert, werttyp) VALUES (", as.character(i), ", ", as.character(mid), ", '", save1[i,4], "', '", save1[i,5], "', '", save1[i,6], "', '", save1[i,7], "', '", save1[i,8],"') ON DUPLICATE KEY UPDATE wert = '", save1[i,7], "';"));
}
for(i in 1:nrow(save1)){
dbExecute(con, str_c("INSERT INTO massnahmendaten (idrow, massnahme_id, ebene1, ebene2, ebene3, wert, werttyp) VALUES (", as.character(i), ", ", as.character(mid), ", '", save1[i,4], "', '", save1[i,5], "', '", save1[i,6], "', '", save1[i,7], "', '", save1[i,8],"') ON DUPLICATE KEY UPDATE wert = '", save1[i,7], "';"));
}
runApp()
loadedTable <- dbGetQuery(con, str_c("SELECT * FROM massnahmendaten WHERE massnahme_id = ", as.character(mid)))
save1 <- loadedTable
save1 <- add_column(save1, id = "id", .after = 1)
massnahme <- subset(list_Massnahmen, id == save1[1,3])[1,1]
datamassnahme <- save1
nr <- as.numeric(subset(datamassnahme, ebene1 == "Kurzbeschreibung" )[1,1])
View(datamassnahme)
View(datamassnahme)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
query <- str_c("INSERT INTO massnahmendaten (idrow, massnahme_id, ebene1, ebene2, ebene3, wert, werttyp) VALUES (", dbQuoteString(con, as.character(i)), ", ", dbQuoteString(con, as.character(mid)), ", '", dbQuoteString(con, save1[i,4]), "', '", dbQuoteString(con, save1[i,5]), "', '", dbQuoteString(con, save1[i,6]), "', '", dbQuoteString(con, save1[i,7]), "', '", dbQuoteString(con, save1[i,8]),"') ON DUPLICATE KEY UPDATE wert = '", dbQuoteString(con, save1[i,7]), "';")
query <- str_c("INSERT INTO massnahmendaten (idrow, massnahme_id, ebene1, ebene2, ebene3, wert, werttyp) VALUES (", dbQuoteString(con, as.character(i)), ", ", dbQuoteString(con, as.character(mid)), ", '", dbQuoteString(con, save1[i,4]), "', '", dbQuoteString(con, save1[i,5]), "', '", dbQuoteString(con, save1[i,6]), "', '", dbQuoteString(con, save1[i,7]), "', '", dbQuoteString(con, save1[i,8]),"') ON DUPLICATE KEY UPDATE wert = '", dbQuoteString(con, save1[i,7]), "';")
library(shiny)
library(RSQLite)
library(shinyMatrix)
library(rhandsontable)
library(readxl)
library(dplyr)
library(rmarkdown)
library(shinycssloaders)
library(shinybusy)
library(writexl)
library(RMySQL)
library(DBI)
con <- dbConnect(MySQL(), user = "Flemming", password = "vo5Otei9", dbname = "r2q", host = "r2q.fh-muenster.de")
list_Massnahmen <- dbGetQuery(con, "SELECT ressource, kategorieIndex, name, id FROM massnahmen");
# list_Massnahmen <- read_excel("Massnahmenliste.xlsx")
list_Massnahmen[["kategorieIndex"]] <- str_pad(list_Massnahmen[["kategorieIndex"]], 3, pad = "0")
list_Massnahmen <- unite(list_Massnahmen, Massnahmen, ressource:name)
query <- str_c("INSERT INTO massnahmendaten (idrow, massnahme_id, ebene1, ebene2, ebene3, wert, werttyp) VALUES (", dbQuoteString(con, as.character(i)), ", ", dbQuoteString(con, as.character(mid)), ", '", dbQuoteString(con, save1[i,4]), "', '", dbQuoteString(con, save1[i,5]), "', '", dbQuoteString(con, save1[i,6]), "', '", dbQuoteString(con, save1[i,7]), "', '", dbQuoteString(con, save1[i,8]),"') ON DUPLICATE KEY UPDATE wert = '", dbQuoteString(con, save1[i,7]), "';")
query
runApp()
query <- str_c("INSERT INTO massnahmendaten (idrow, massnahme_id, ebene1, ebene2, ebene3, wert, werttyp) VALUES (", dbQuoteString(con, as.character(i)), ", ", dbQuoteString(con, as.character(mid)), ", '", dbQuoteString(con, as.character(save1[i,4])), "', '", dbQuoteString(con, as.character(save1[i,5])), "', '", dbQuoteString(con, as.character(save1[i,6])), "', '", dbQuoteString(con, as.character(save1[i,7])), "', '", dbQuoteString(con, as.character(save1[i,8])),"') ON DUPLICATE KEY UPDATE wert = '", dbQuoteString(con, as.character(save1[i,7])), "';")
runApp()
query <- str_c("INSERT INTO massnahmendaten (idrow, massnahme_id, ebene1, ebene2, ebene3, wert, werttyp) VALUES (", dbQuoteString(con, as.character(i)), ", ", dbQuoteString(con, as.character(mid)), ", '", dbQuoteString(con, as.character(save1[i,4])), "', '", dbQuoteString(con, as.character(save1[i,5])), "', '", dbQuoteString(con, as.character(save1[i,6])), "', '", dbQuoteString(con, as.character(save1[i,7])), "', '", dbQuoteString(con, as.character(save1[i,8])),"') ON DUPLICATE KEY UPDATE wert = '", dbQuoteString(con, as.character(save1[i,7])), "';")
i = 1
query <- str_c("INSERT INTO massnahmendaten (idrow, massnahme_id, ebene1, ebene2, ebene3, wert, werttyp) VALUES (", dbQuoteString(con, as.character(i)), ", ", dbQuoteString(con, as.character(mid)), ", '", dbQuoteString(con, as.character(save1[i,4])), "', '", dbQuoteString(con, as.character(save1[i,5])), "', '", dbQuoteString(con, as.character(save1[i,6])), "', '", dbQuoteString(con, as.character(save1[i,7])), "', '", dbQuoteString(con, as.character(save1[i,8])),"') ON DUPLICATE KEY UPDATE wert = '", dbQuoteString(con, as.character(save1[i,7])), "';")
query
View(datamassnahme)
View(datamassnahme)
save1 <- read_excel("R2Q_Datensatz_leer.xlsx")
for(i in 1:nrow(save1)){
query <- str_c("INSERT INTO massnahmendaten (idrow, massnahme_id, ebene1, ebene2, ebene3, wert, werttyp) VALUES (", dbQuoteString(con, as.character(i)), ", ", dbQuoteString(con, as.character(mid)), ", '", dbQuoteString(con, as.character(save1[i,4])), "', '", dbQuoteString(con, as.character(save1[i,5])), "', '", dbQuoteString(con, as.character(save1[i,6])), "', '", dbQuoteString(con, as.character(save1[i,7])), "', '", dbQuoteString(con, as.character(save1[i,8])),"') ON DUPLICATE KEY UPDATE wert = '", dbQuoteString(con, as.character(save1[i,7])), "';")
dbExecute(con, query);
}
i = 1
query <- str_c("INSERT INTO massnahmendaten (idrow, massnahme_id, ebene1, ebene2, ebene3, wert, werttyp) VALUES (", dbQuoteString(con, as.character(i)), ", ", dbQuoteString(con, as.character(mid)), ", '", dbQuoteString(con, as.character(save1[i,4])), "', '", dbQuoteString(con, as.character(save1[i,5])), "', '", dbQuoteString(con, as.character(save1[i,6])), "', '", dbQuoteString(con, as.character(save1[i,7])), "', '", dbQuoteString(con, as.character(save1[i,8])),"') ON DUPLICATE KEY UPDATE wert = '", dbQuoteString(con, as.character(save1[i,7])), "';")
query
save1[i,4]
as.character(save1[i,4])
print(as.character(save1[i,4])
)
quote
query
runApp()
runApp()
input$kurzb
shiny::runApp()
runApp()
runApp()
runApp()
CbgInputToWert <- function(Box,e1,e2="NA",e3="NA") {
IputWert <- data.frame(Box)
for (i in 1:nrow(subset(datamassnahme, ebene1 == e1))) {
TextInputToWert("0",e1)
}
if (nrow(param) == 0 ){} else
{
for (i in 1:as.numeric(nrow(InputWert))) {
TextInputToWert("1",e1,InputWert[i])
}
}
}
CbgInputToWert <- function(Box,e1,e2="NA",e3="NA") {
IputWert <- data.frame(Box)
for (i in 1:nrow(subset(datamassnahme, ebene1 == e1))) {
TextInputToWert("0",e1)
}
if (nrow(param) == 0 ){} else
{
for (i in 1:as.numeric(nrow(InputWert))) {
TextInputToWert("1",e1,InputWert[i])
}
}
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
CbgInputToWert <- function(Box,e1,e2="NA",e3="NA") {
InputWert <- data.frame(Box)
for (i in 1:nrow(subset(datamassnahme, ebene1 == e1))) {
TextInputToWert("0",e1)
}
if (nrow(InputWert) == 0 ){} else
{
for (i in 1:as.numeric(nrow(InputWert))) {
e2 <- InputWert[i,1]
datamassnahme[datamassnahme$ebene1==e1 & datamassnahme$ebene2==e2 ,7] <<- "1"
}
}
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
cars[cars$speed==15]
cars[cars$speed==15,1]
df <- cars
df
df[df$speed==20,1] <- 21
df
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
input$selkombi1 %>%
TextInputToWert("Kombinationsmöglichkeiten","1")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
